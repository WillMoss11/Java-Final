-- Drop existing tables if they exist
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS products CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Create Users Table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    role VARCHAR(50) CHECK (role IN ('buyer', 'seller', 'admin')) NOT NULL
);

-- Create Products Table
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    seller_id INT,
    FOREIGN KEY (seller_id) REFERENCES users(id) ON DELETE SET NULL
);

-- Create Orders Table (Optional, for future implementation)
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    buyer_id INT,
    product_id INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (buyer_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

-- Sample insert queries to add some data

-- Inserting Users
INSERT INTO users (username, email, password, role) VALUES
('admin_user', 'admin@example.com', 'adminpassword', 'admin'),
('seller_user', 'seller@example.com', 'sellerpassword', 'seller'),
('buyer_user', 'buyer@example.com', 'buyerpassword', 'buyer');

-- Inserting Products
INSERT INTO products (name, price, quantity, seller_id) VALUES
('Laptop', 999.99, 10, 2),  -- Assume seller with id 2 is the seller
('Smartphone', 599.99, 20, 2);

-- Inserting Orders (Optional, for future functionality)
INSERT INTO orders (buyer_id, product_id) VALUES
(3, 1),  -- Buyer with id 3 purchases product with id 1
(3, 2);  -- Buyer with id 3 purchases product with id 2
